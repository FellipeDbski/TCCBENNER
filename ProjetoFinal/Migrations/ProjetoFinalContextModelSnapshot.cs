// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using ProjetoFinal.DAO;
using ProjetoFinal.Models;
using System;

namespace ProjetoFinal.Migrations
{
    [DbContext(typeof(ProjetoFinalContext))]
    partial class ProjetoFinalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjetoFinal.Models.Categoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.Property<string>("Nome");

                    b.HasKey("ID");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Cliente", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro");

                    b.Property<string>("CPF");

                    b.Property<string>("Cidade");

                    b.Property<int>("Genero");

                    b.Property<int>("Idade");

                    b.Property<string>("Nome");

                    b.Property<string>("Rua");

                    b.Property<string>("Telefone");

                    b.HasKey("ID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ProjetoFinal.Models.FormaDePagamento", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("ID");

                    b.ToTable("FormaDePagamento");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Pedidos", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataInicial");

                    b.Property<DateTime>("DataVencimento");

                    b.Property<int>("ProdutosID");

                    b.Property<int>("Quantidade");

                    b.Property<int>("StatusID");

                    b.Property<float>("Valor");

                    b.HasKey("ID");

                    b.HasIndex("ProdutosID");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Produtos", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CategoriaID");

                    b.Property<string>("Descricao");

                    b.Property<string>("Marca");

                    b.Property<string>("Nome");

                    b.Property<int>("Quantidade");

                    b.Property<string>("Tamanho");

                    b.Property<double>("Valor");

                    b.HasKey("ID");

                    b.HasIndex("CategoriaID");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("ProjetoFinal.Models.ProdutoVenda", b =>
                {
                    b.Property<int>("VendaID");

                    b.Property<int>("ProdutoID");

                    b.Property<int>("Quantidade");

                    b.HasKey("VendaID", "ProdutoID");

                    b.HasIndex("ProdutoID");

                    b.ToTable("ProdutoVenda");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.Property<string>("Senha");

                    b.Property<string>("TipoUsuario");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Venda", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ClienteID");

                    b.Property<DateTime>("Data");

                    b.Property<int?>("FormaDePagamentoID");

                    b.Property<int>("Quantidade");

                    b.Property<double>("Total");

                    b.Property<int?>("VendedorID");

                    b.HasKey("ID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("FormaDePagamentoID");

                    b.HasIndex("VendedorID");

                    b.ToTable("Venda");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Vendedores", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Genero");

                    b.Property<string>("Nome");

                    b.Property<double>("TotalVendido");

                    b.Property<int>("Turno");

                    b.HasKey("ID");

                    b.ToTable("Vendedores");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Pedidos", b =>
                {
                    b.HasOne("ProjetoFinal.Models.Produtos", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutosID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjetoFinal.Models.Produtos", b =>
                {
                    b.HasOne("ProjetoFinal.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaID");
                });

            modelBuilder.Entity("ProjetoFinal.Models.ProdutoVenda", b =>
                {
                    b.HasOne("ProjetoFinal.Models.Produtos", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjetoFinal.Models.Venda", "Venda")
                        .WithMany("Produtos")
                        .HasForeignKey("VendaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjetoFinal.Models.Venda", b =>
                {
                    b.HasOne("ProjetoFinal.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID");

                    b.HasOne("ProjetoFinal.Models.FormaDePagamento", "FormaDePagamento")
                        .WithMany()
                        .HasForeignKey("FormaDePagamentoID");

                    b.HasOne("ProjetoFinal.Models.Vendedores", "Vendedor")
                        .WithMany()
                        .HasForeignKey("VendedorID");
                });
#pragma warning restore 612, 618
        }
    }
}
